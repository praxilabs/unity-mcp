---
description: Quick reference guide for XNode Step Nodes - directs to specific router rule files
alwaysApply: false
---

<rule>
  <meta>
    <title>XNode Step Nodes - Core Reference Guide</title>
    <description>Quick reference guide for XNode Step Nodes - directs to specific router rule files for detailed implementation</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
      <action-matcher action="create-scriptableobject">Triggered when creating a new XNode Graph Node using the UnityMCP</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <non-negotiable priority="critical">
      <description>This is a REFERENCE FILE ONLY. Use this file to identify the appropriate node category, then ALWAYS fetch the specific router rule file for detailed implementation. This file provides quick node selection guidance but contains no implementation details.</description>
      <examples>
        <example title="Reference File Usage">
          <correct-example title="Proper reference file usage" conditions="Need to implement a node" expected-result="Correct router file accessed" correctness-criteria="Uses this file to identify category then fetches router file">Identify node category here → Fetch specific router rule file → Implement with detailed guidance</correct-example>
          <incorrect-example title="Improper reference file usage" conditions="Need to implement a node" expected-result="Correct router file accessed" incorrectness-criteria="Tries to implement using only this reference file">Use only this file for implementation without fetching router files</incorrect-example>
        </example>
      </examples>
    </non-negotiable>
    <requirement priority="high">
      <description>Quick Node Selection Guide: Attach-Detach for object attachment/detachment, Click for user clicking interactions, Control Flow for execution flow and branching logic, Camera for camera positioning and focus, Function Call for method execution on GameObjects, Loops for iterative operations, Tools for object manipulation and visibility control, UI for user interface and messaging, Utility for system utility operations, NewEvents for event-driven interactions, Table for data table operations, Progress Map for progress tracking and navigation, Animation Step for animation control and playback.</description>
      <examples>
        <example title="Quick Category Identification">
          <correct-example title="Proper category identification" conditions="Need to identify node category" expected-result="Correct category identified" correctness-criteria="Matches need to category then fetches router file">Need equipment assembly → Identify Attach-Detach category → Fetch AttachDetachNodesRouter.mdc</correct-example>
          <incorrect-example title="Improper category identification" conditions="Need to identify node category" expected-result="Correct category identified" incorrectness-criteria="Selects wrong category or skips router file fetch">Need equipment assembly → Wrong category or no router file fetch</incorrect-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="critical">
      <description>MANDATORY: Always fetch the specific router rule file after identifying the category. Router files: AttachDetachNodesRouter.mdc, ClickNodesRouter.mdc, ControlFlowNodesRouter.mdc, CameraNodesRouter.mdc, FunctionCallNodesRouter.mdc, LoopNodesRouter.mdc, ToolNodesRouter.mdc, UINodesRouter.mdc, UtilityNodesRouter.mdc, NewEventsNodesRouter.mdc, TableNodesRouter.mdc, ProgressMapNodesRouter.mdc, MiscNodesRouter.mdc. These contain detailed implementation guidance.</description>
      <examples>
        <example title="Router File Access">
          <correct-example title="Proper router file access" conditions="Need to implement node" expected-result="Detailed implementation guidance obtained" correctness-criteria="Fetches correct router file with detailed guidance">Identify category → fetch_rules(["MCP/GraphLogic/Click/ClickNodesRouter"]) → Get detailed ClickStep implementation</correct-example>
          <incorrect-example title="Improper router file access" conditions="Need to implement node" expected-result="Detailed implementation guidance obtained" incorrectness-criteria="Skips router file or uses wrong file">Identify category → Skip router file → Try to implement without detailed guidance</incorrect-example>
        </example>
      </examples>
    </requirement>
  </requirements>
  <context description="Reference file purpose and usage">
    This file serves ONLY as a quick reference to identify node categories and direct users to the appropriate router rule files. It contains NO implementation details. Always use this file to identify the category, then immediately fetch the specific router rule file for detailed implementation guidance, component requirements, and usage patterns.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/AttachDetach/AttachDetachNodesRouter.mdc" reason="Attachment operations">Object attachment and detachment patterns</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Click/ClickNodesRouter.mdc" reason="User interactions">Clicking and interactive manipulation patterns</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/ControlFlow/ControlFlowNodesRouter.mdc" reason="Flow control">Execution flow and branching logic patterns</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Camera/CameraNodesRouter.mdc" reason="Camera operations">Camera positioning and focus control patterns</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/FunctionCall/FunctionCallNodesRouter.mdc" reason="Method execution">Function call and system interaction patterns</reference>
  </references>
</rule>