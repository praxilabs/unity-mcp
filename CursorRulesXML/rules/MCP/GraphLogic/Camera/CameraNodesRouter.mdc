---
description: Camera positioning, focus control, and view management. Contains FocusOnToolStep, ReturnCameraStep, and camera sequence patterns for guided attention.
alwaysApply: false
---

<rule>
  <meta>
    <title>Camera Nodes</title>
    <description>Camera positioning, focus control, and view management. Contains FocusOnToolStep, ReturnCameraStep, and camera sequence patterns for guided attention.</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
    </applies-to>
  </meta>
  <requirements>
    <non-negotiable priority="critical">
      <description>This is a ROUTING RULE ONLY - it does not provide functional tools or capabilities. This rule only routes you to the appropriate node rules for detailed implementation. For actual node implementation, refer to the specific node rules: FocusOnToolStep.mdc and ReturnCameraStep.mdc.</description>
    </non-negotiable>
    <non-negotiable priority="critical">
      <description>ANY time you use FocusOnToolStep and later want to use FocusOnToolStep again (same or different tool), you MUST use ReturnCameraStep between them. This is MANDATORY due to camera system limitations - failure to follow this rule will cause camera system failures.</description>
      <examples>
        <example title="Multiple Focus Operations">
          <correct-example title="Proper multiple focus sequence" conditions="Need to focus on multiple objects" expected-result="Camera system functions correctly" correctness-criteria="Uses ReturnCameraStep between all FocusOnToolStep operations">FocusOnToolStep(Object1) → [operations] → ReturnCameraStep → FocusOnToolStep(Object2) → [operations] → ReturnCameraStep</correct-example>
          <incorrect-example title="Missing return between focuses" conditions="Need to focus on multiple objects" expected-result="Camera system functions correctly" incorrectness-criteria="Skips ReturnCameraStep between FocusOnToolStep operations">FocusOnToolStep(Object1) → [operations] → FocusOnToolStep(Object2) // WILL CAUSE CAMERA SYSTEM FAILURE</incorrect-example>
        </example>
      </examples>
    </non-negotiable>
    <requirement priority="critical">
      <description>The camera system tracks only ONE previous camera position (main camera), not a stack. This requires strict management and proper sequencing.</description>
    </requirement>
    <requirement priority="high">
      <description>FocusOnToolStep must be paired with ReturnCameraStep for proper camera management. Use appropriate delays for camera movements.</description>
    </requirement>
    <requirement priority="medium">
      <description>End experiments with ReturnCameraStep for professional polish. Single focus operations can optionally use ReturnCameraStep.</description>
    </requirement>
  </requirements>
  <context description="Additional considerations for camera operations">
    Camera nodes control camera positioning and focus in virtual lab experiments. Essential for guided attention, close-up views, and view management. The system architecture tracks only one previous camera position, requiring strict management of focus and return operations.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Camera/FocusOnToolStep.mdc" reason="Focus operations">Detailed focus operation patterns</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Camera/ReturnCameraStep.mdc" reason="Return operations">Detailed return operation patterns</reference>
  </references>
</rule>