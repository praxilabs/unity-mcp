---
description: Data table operations, record management, and stage data handling. Contains table interaction steps, record operations, and data management patterns.
alwaysApply: false
---

<rule>
  <meta>
    <title>Table Nodes Router</title>
    <description>Data table operations, record management, and stage data handling. Contains table interaction steps, record operations, and data management patterns.</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
    </applies-to>
  </meta>
  <requirements>
    <non-negotiable priority="critical">
      <description>This is a ROUTING RULE ONLY - it does not provide functional tools or capabilities. This rule only routes you to the appropriate node rules for detailed implementation. For actual node implementation, refer to the specific node rules: AddRecordStep.mdc, EnableRecordButtonStep.mdc, EnableStageStep.mdc, SetCurrentStageStep.mdc, SetStagePassedStep.mdc, and UnsetStagePassedStep.mdc.</description>
    </non-negotiable>
    <requirement priority="high">
      <description>Use AddRecordStep for adding new data records to tables, logging experiment results, and data collection operations.</description>
    </requirement>
    <requirement priority="high">
      <description>Use EnableRecordButtonStep for controlling UI button states for data recording, user-controlled data capture flows, and interactive data collection.</description>
    </requirement>
    <requirement priority="high">
      <description>Use EnableStageStep for starting new experiment stages, initializing stage-specific functionality, and beginning new phases.</description>
    </requirement>
    <requirement priority="high">
      <description>Use SetCurrentStageStep for explicit stage navigation, resuming from specific stages, and conditional stage routing.</description>
    </requirement>
    <requirement priority="high">
      <description>Use SetStagePassedStep for marking stages as completed, unlocking subsequent stages, and progress tracking.</description>
    </requirement>
    <requirement priority="high">
      <description>Use UnsetStagePassedStep for resetting stage completion status, error handling and retry flows, and reverting stage progress.</description>
    </requirement>
    <requirement priority="critical">
      <description>Distinguish between data operations and stage management. Use AddRecordStep/EnableRecordButtonStep for data operations, stage nodes for stage management.</description>
    </requirement>
    <requirement priority="critical">
      <description>Follow stage progression workflow: Use EnableStageStep to start, SetStagePassedStep to complete, UnsetStagePassedStep to reset. Use SetCurrentStageStep for explicit stage navigation.</description>
    </requirement>
  </requirements>
  <context description="Additional considerations for table nodes">
    Table nodes handle data table operations and stage management in virtual lab experiments. Essential for data collection, record management, and experiment stage tracking. These nodes provide both data manipulation capabilities and stage progression control.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Table/AddRecordStep.mdc" reason="Data record operations">Adding records to data tables</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Table/EnableRecordButtonStep.mdc" reason="UI button control">Controlling record button states</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Table/EnableStageStep.mdc" reason="Stage initialization">Activating and initializing stages</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Table/SetCurrentStageStep.mdc" reason="Stage navigation">Setting current active stage</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Table/SetStagePassedStep.mdc" reason="Stage completion">Marking stages as completed</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Table/UnsetStagePassedStep.mdc" reason="Stage reset">Reverting stage completion status</reference>
  </references>
</rule>