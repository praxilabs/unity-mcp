---
description: Resets the current progression of the current stage
alwaysApply: false
---

<rule>
  <meta>
    <title>ResetCurrentStageStep</title>
    <description>Resets the current progression of the current stage</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
      <action-matcher action="create-xnode-node">Triggered when creating a new ResetCurrentStageStep Node using the UnityMCP</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <requirement priority="critical">
      <description>ResetCurrentStageStep resets progress within the active stage, allowing a retry or restart of the current stage progression. Use for retrying an experiment sequence within the same stage.</description>
      <examples>
        <example title="Current Stage Reset">
          <correct-example title="Proper current stage reset" conditions="Need to reset current stage progression" expected-result="Current stage progression reset for retry" correctness-criteria="Uses ResetCurrentStageStep for current stage only">ShowMessage (Retrying stage) → ResetCurrentStageStep → ProgressMapAutoNextStep</correct-example>
          <incorrect-example title="Improper current stage reset" conditions="Need to reset current stage progression" expected-result="Current stage progression reset for retry" incorrectness-criteria="Uses specific stage reset when current stage reset is needed">ShowMessage (Retrying stage) → ResetStageByNumberStep (stageNumber: 1)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>ResetCurrentStageStep operates on current stage context with no parameters required. Must be used within an active stage with progression to reset and proper reset permissions.</description>
      <examples>
        <example title="Context Requirements">
          <correct-example title="Proper context usage" conditions="Using ResetCurrentStageStep" expected-result="Successful current stage reset" correctness-criteria="Used within active stage with progression to reset">ResetCurrentStageStep (no parameters) → Current stage progression cleared</correct-example>
          <incorrect-example title="Improper context usage" conditions="Using ResetCurrentStageStep" expected-result="Successful current stage reset" incorrectness-criteria="Used without active stage context">ResetCurrentStageStep without active stage</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="critical">
      <description>ResetCurrentStageStep resets only the current active stage, not specific stages. Clears current stage progression for retry. Use ResetStageByNumberStep for specific stage resets.</description>
      <examples>
        <example title="Current Stage vs Specific Stage Reset">
          <correct-example title="Proper current stage reset usage" conditions="Need to reset current stage" expected-result="Current stage progression reset" correctness-criteria="Uses ResetCurrentStageStep for current stage only">ResetCurrentStageStep → Current stage progression cleared</correct-example>
          <incorrect-example title="Improper specific stage reset usage" conditions="Need to reset specific stage" expected-result="Specific stage progression reset" incorrectness-criteria="Uses ResetCurrentStageStep when specific stage reset is needed">ResetCurrentStageStep → Specific stage reset (wrong approach)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="medium">
      <description>Use retry stage flow pattern when retrying an experiment sequence within the same stage. Combines stage reset with progress navigation for seamless retry experience.</description>
      <examples>
        <example title="Retry Stage Flow">
          <correct-example title="Proper retry stage flow" conditions="Need to retry current stage" expected-result="Seamless stage retry with progress reset" correctness-criteria="Uses retry flow pattern with stage reset and progress navigation">ShowMessage (Retrying stage) → ResetCurrentStageStep → ProgressMapAutoNextStep</correct-example>
          <incorrect-example title="Improper retry stage flow" conditions="Need to retry current stage" expected-result="Seamless stage retry with progress reset" incorrectness-criteria="Skips stage reset or progress navigation">ShowMessage (Retrying stage) → ProgressMapAutoNextStep</correct-example>
        </example>
      </examples>
    </requirement>
  </requirements>
  <context description="Additional considerations for ResetCurrentStageStep">
    This node is essential for allowing users to retry experiment sequences within the same stage. It clears the current stage progression without affecting other stages, making it ideal for error recovery and retry scenarios.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/ProgressMap/ProgressMapNodes.mdc" reason="Progress map overview">Progress tracking and navigation control patterns</reference>
  </references>
</rule>
