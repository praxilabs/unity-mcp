---
description: Enable/disable UI button interactions for UI control and button state management
alwaysApply: false
---

<rule>
  <meta>
    <title>ToggleUIButtonInteractionStep</title>
    <description>Enable/disable UI button interactions for UI control and button state management</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
      <action-matcher action="create-xnode-node">Triggered when creating a new ToggleUIButtonInteractionStep Node using the UnityMCP</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <requirement priority="critical">
      <description>ToggleUIButtonInteractionStep enables or disables UI button interactions in virtual lab experiments for UI control, button state management, and controlling user interface interactions. Use for UI control, button state management, and user interface interaction control.</description>
      <examples>
        <example title="UI Button Control">
          <correct-example title="Proper UI button usage" conditions="Need to control UI button interactions" expected-result="UI button interactions controlled" correctness-criteria="Uses ToggleUIButtonInteractionStep for UI control">ToggleUIButtonInteractionStep (Button1, Enable) → UserInteraction → ToggleUIButtonInteractionStep (Button1, Disable)</correct-example>
          <incorrect-example title="Improper UI button usage" conditions="Need to control UI button interactions" expected-result="UI button interactions controlled" correctness-criteria="Uses FreezeLabStep for UI control">FreezeLabStep (freeze) → UI controlled (wrong approach)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>ToggleUIButtonInteractionStep requires Button List (list of UI buttons to toggle interactions on), Interaction State (boolean to enable/disable interactions), and optional Button Group (grouping for button operations). Must have valid button references, interaction components, button grouping, and state management.</description>
      <examples>
        <example title="Parameter Requirements">
          <correct-example title="Proper parameter usage" conditions="Using ToggleUIButtonInteractionStep" expected-result="UI button interactions successfully controlled" correctness-criteria="Provides valid button list and interaction state">ToggleUIButtonInteractionStep (Button List: ["Button1", "Button2"], Interaction State: true) → UI buttons enabled</correct-example>
          <incorrect-example title="Improper parameter usage" conditions="Using ToggleUIButtonInteractionStep" expected-result="UI button interactions successfully controlled" correctness-criteria="Missing required button list or interaction state">ToggleUIButtonInteractionStep (Interaction State: true) → No button list provided</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>Use ToggleUIButtonInteractionStep for UI button control and button grouping. Properly group buttons for efficient operations and always manage button interaction states properly. Use for safety systems and UI interaction control.</description>
      <examples>
        <example title="UI Button Control and Grouping">
          <correct-example title="Proper UI button control" conditions="Need to control UI button interactions" expected-result="UI button interactions controlled with proper grouping" correctness-criteria="Uses ToggleUIButtonInteractionStep for UI control">ToggleUIButtonInteractionStep (Button1, Enable) → UserInteraction → ToggleUIButtonInteractionStep (Button1, Disable)</correct-example>
          <incorrect-example title="Improper UI button control" conditions="Need to control UI button interactions" expected-result="UI button interactions controlled with proper grouping" correctness-criteria="Uses individual button control instead of grouping">Button1Enable → UserInteraction → Button1Disable</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="medium">
      <description>Use UI button control pattern for basic button interaction control. Use UI state management pattern for complete UI state control. Use button group management pattern for organized button operations. Use UI safety pattern for safety systems.</description>
      <examples>
        <example title="UI Button Patterns">
          <correct-example title="Proper UI button control pattern" conditions="Need basic button interaction control" expected-result="Button interactions controlled with user interaction" correctness-criteria="Uses UI button control pattern">ToggleUIButtonInteractionStep (Button1, Enable) → UserInteraction → ToggleUIButtonInteractionStep (Button1, Disable) → Continue</correct-example>
          <incorrect-example title="Improper UI state management pattern" conditions="Need basic button interaction control" expected-result="Button interactions controlled with user interaction" correctness-criteria="Uses UI state management pattern when button control is appropriate">ToggleUIButtonInteractionStep (All buttons, Disable) → SetupPhase → ToggleUIButtonInteractionStep (Active buttons, Enable)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="medium">
      <description>Use sequential button control pattern for multiple button operations. Use UI safety pattern for safety systems with conditional button control based on safety checks.</description>
      <examples>
        <example title="Advanced UI Patterns">
          <correct-example title="Proper sequential button control" conditions="Need multiple button operations" expected-result="Multiple buttons controlled sequentially" correctness-criteria="Uses sequential button control pattern">ToggleUIButtonInteractionStep (Button1, Button2, Enable) → UserInteraction → ToggleUIButtonInteractionStep (Button1, Button2, Disable) → Continue</correct-example>
          <incorrect-example title="Improper individual button control" conditions="Need multiple button operations" expected-result="Multiple buttons controlled sequentially" correctness-criteria="Uses individual button control instead of sequential pattern">ToggleUIButtonInteractionStep (Button1, Enable) → ToggleUIButtonInteractionStep (Button2, Enable)</correct-example>
        </example>
      </examples>
    </requirement>
  </requirements>
  <context description="Additional considerations for ToggleUIButtonInteractionStep">
    This node is essential for UI button interaction control in virtual lab experiments. It provides the capability to enable/disable UI button interactions for UI control, button state management, and user interface interaction control. Proper button grouping and state management are critical for efficient UI operations.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Utility/UtilityNodes.mdc" reason="Utility nodes overview">System utility operations and timing control patterns</reference>
  </references>
</rule>