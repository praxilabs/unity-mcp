---
description: Freeze/unfreeze lab interactions for pause functionality and modal dialogs
alwaysApply: false
---

<rule>
  <meta>
    <title>FreezeLabStep</title>
    <description>Freeze/unfreeze lab interactions for pause functionality and modal dialogs</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
      <action-matcher action="create-xnode-node">Triggered when creating a new FreezeLabStep Node using the UnityMCP</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <requirement priority="critical">
      <description>FreezeLabStep controls lab interaction freezing and unfreezing in virtual lab experiments for pause functionality, modal dialogs, and system-wide interaction control. Use for pause functionality, modal dialogs, and system-wide interaction control.</description>
      <examples>
        <example title="Lab Interaction Control">
          <correct-example title="Proper lab freeze usage" conditions="Need to pause lab interactions" expected-result="Lab interactions frozen/unfrozen" correctness-criteria="Uses FreezeLabStep for system-wide control">FreezeLabStep (freeze) → ShowMessage (System paused) → UserAction → FreezeLabStep (unfreeze)</correct-example>
          <incorrect-example title="Improper lab freeze usage" conditions="Need to pause lab interactions" expected-result="Lab interactions frozen/unfrozen" correctness-criteria="Uses DelayStep for interaction control">DelayStep (5) → System paused (wrong approach)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>FreezeLabStep requires Freeze State (boolean to freeze/unfreeze interactions) and optional User Feedback (message to show when freezing/unfreezing). Must determine freeze state, provide user feedback, complete freeze cycle, and understand system state.</description>
      <examples>
        <example title="Parameter Requirements">
          <correct-example title="Proper parameter usage" conditions="Using FreezeLabStep" expected-result="Lab interactions successfully frozen/unfrozen" correctness-criteria="Provides valid freeze state parameter">FreezeLabStep (Freeze State: true, User Feedback: "System paused") → Lab frozen</correct-example>
          <incorrect-example title="Improper parameter usage" conditions="Using FreezeLabStep" expected-result="Lab interactions successfully frozen/unfrozen" correctness-criteria="Missing required freeze state parameter">FreezeLabStep (User Feedback: "System paused") → No freeze state provided</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="critical">
      <description>Use FreezeLabStep for system-wide control only. Freezes/unfreezes ALL lab interactions. Always complete freeze → action → unfreeze cycle and never leave the system frozen permanently.</description>
      <examples>
        <example title="System-Wide Control">
          <correct-example title="Proper system-wide control" conditions="Need to freeze all lab interactions" expected-result="All lab interactions frozen" correctness-criteria="Uses FreezeLabStep for system-wide control">FreezeLabStep (Freeze State: true) → All interactions frozen</correct-example>
          <incorrect-example title="Improper partial control" conditions="Need to freeze all lab interactions" expected-result="All lab interactions frozen" correctness-criteria="Uses partial control for system-wide freeze">ToggleColliderStep (Device1, disable) → All interactions frozen (wrong approach)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="critical">
      <description>Always complete the freeze → action → unfreeze cycle. Never leave the system frozen permanently. Ensure proper cycle completion for system stability.</description>
      <examples>
        <example title="Complete Cycle Requirement">
          <correct-example title="Proper complete cycle" conditions="Need to freeze and unfreeze system" expected-result="System frozen, action performed, system unfrozen" correctness-criteria="Uses complete freeze cycle">FreezeLabStep (freeze) → UserAction → FreezeLabStep (unfreeze) → Continue</correct-example>
          <incorrect-example title="Improper incomplete cycle" conditions="Need to freeze and unfreeze system" expected-result="System frozen, action performed, system unfrozen" correctness-criteria="Leaves system frozen">FreezeLabStep (freeze) → UserAction → Continue</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="medium">
      <description>Use system pause pattern for basic pause functionality. Use modal dialog pattern for modal dialog scenarios. Use error handling pause pattern for error scenarios.</description>
      <examples>
        <example title="Freeze Patterns">
          <correct-example title="Proper system pause pattern" conditions="Need system pause functionality" expected-result="System paused with user feedback" correctness-criteria="Uses system pause pattern">FreezeLabStep (freeze) → ShowMessage (System paused) → UserAction → FreezeLabStep (unfreeze) → Continue</correct-example>
          <incorrect-example title="Improper modal dialog pattern" conditions="Need system pause functionality" expected-result="System paused with user feedback" correctness-criteria="Uses modal dialog pattern when system pause is appropriate">FreezeLabStep (freeze) → ShowMessage (Modal dialog) → UserAction → FreezeLabStep (unfreeze)</correct-example>
        </example>
      </examples>
    </requirement>
  </requirements>
  <context description="Additional considerations for FreezeLabStep">
    This node is essential for system-wide interaction control in virtual lab experiments. It provides the capability to freeze/unfreeze lab interactions for pause functionality and modal dialogs. The complete cycle requirement is critical for system stability.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Utility/UtilityNodes.mdc" reason="Utility nodes overview">System utility operations and timing control patterns</reference>
  </references>
</rule>
