---
description: Enable/disable colliders on multiple devices for device interaction control and safety systems
alwaysApply: false
---

<rule>
  <meta>
    <title>ToggleDeviceCollidersStep</title>
    <description>Enable/disable colliders on multiple devices for device interaction control and safety systems</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
      <action-matcher action="create-xnode-node">Triggered when creating a new ToggleDeviceCollidersStep Node using the UnityMCP</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <requirement priority="critical">
      <description>ToggleDeviceCollidersStep enables or disables colliders on multiple devices in virtual lab experiments for device interaction control, safety systems, and managing multiple device colliders simultaneously. Use for device interaction control, safety systems, and multiple device management.</description>
      <examples>
        <example title="Multiple Device Control">
          <correct-example title="Proper multiple device usage" conditions="Need to control multiple device colliders" expected-result="Multiple device colliders controlled" correctness-criteria="Uses ToggleDeviceCollidersStep for multiple devices">ToggleDeviceCollidersStep (Device1, Device2, Device3, Enable) → UserAction</correct-example>
          <incorrect-example title="Improper single device usage" conditions="Need to control single device collider" expected-result="Single device collider controlled" correctness-criteria="Uses ToggleDeviceCollidersStep for single device">ToggleDeviceCollidersStep (Device1, Enable) → Single device controlled (wrong approach)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>ToggleDeviceCollidersStep requires Device List (list of devices to toggle colliders on), Collider State (boolean to enable/disable colliders), and optional Device Group (grouping for device operations). Must have valid device references, collider components, device grouping, and state management.</description>
      <examples>
        <example title="Parameter Requirements">
          <correct-example title="Proper parameter usage" conditions="Using ToggleDeviceCollidersStep" expected-result="Multiple device colliders successfully controlled" correctness-criteria="Provides valid device list and collider state">ToggleDeviceCollidersStep (Device List: ["Device1", "Device2", "Device3"], Collider State: true) → Multiple devices enabled</correct-example>
          <incorrect-example title="Improper parameter usage" conditions="Using ToggleDeviceCollidersStep" expected-result="Multiple device colliders successfully controlled" correctness-criteria="Missing required device list or collider state">ToggleDeviceCollidersStep (Collider State: true) → No device list provided</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="critical">
      <description>Use ToggleDeviceCollidersStep for multiple devices only, not single device operations. Use for controlling multiple device colliders simultaneously with proper device grouping and state management. Use ToggleColliderStep for single device operations.</description>
      <examples>
        <example title="Multiple vs Single Device Control">
          <correct-example title="Proper multiple device usage" conditions="Need to control multiple device colliders" expected-result="Multiple device colliders controlled simultaneously" correctness-criteria="Uses ToggleDeviceCollidersStep for multiple devices">ToggleDeviceCollidersStep (Device1, Device2, Device3, Enable) → Multiple devices controlled</correct-example>
          <incorrect-example title="Improper single device usage" conditions="Need to control single device collider" expected-result="Single device collider controlled" correctness-criteria="Uses ToggleDeviceCollidersStep for single device">ToggleDeviceCollidersStep (Device1, Enable) → Single device controlled (wrong approach)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>Properly group devices for efficient operations and always manage device collider states properly. Use device grouping for organized device management and maintain proper state tracking for device collider states.</description>
      <examples>
        <example title="Device Grouping and State Management">
          <correct-example title="Proper device grouping" conditions="Need to manage device groups" expected-result="Device groups managed efficiently" correctness-criteria="Uses proper device grouping">ToggleDeviceCollidersStep (Group A devices, Enable) → ToggleDeviceCollidersStep (Group B devices, Disable)</correct-example>
          <incorrect-example title="Improper device grouping" conditions="Need to manage device groups" expected-result="Device groups managed efficiently" correctness-criteria="Uses individual device control instead of grouping">ToggleDeviceCollidersStep (Device1, Enable) → ToggleDeviceCollidersStep (Device2, Disable)</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="medium">
      <description>Use multiple device collider control pattern for basic multi-device operations. Use device safety pattern for safety systems. Use device group management pattern for organized device operations. Use device setup pattern for device initialization.</description>
      <examples>
        <example title="Device Control Patterns">
          <correct-example title="Proper multiple device pattern" conditions="Need multi-device collider control" expected-result="Multiple device colliders controlled with user action" correctness-criteria="Uses multiple device collider control pattern">ToggleDeviceCollidersStep (Device1, Device2, Device3, Enable) → UserAction → ToggleDeviceCollidersStep (Device1, Device2, Device3, Disable) → Continue</correct-example>
          <incorrect-example title="Improper single device pattern" conditions="Need multi-device collider control" expected-result="Multiple device colliders controlled with user action" correctness-criteria="Uses single device pattern for multi-device operation">ToggleDeviceCollidersStep (Device1, Enable) → UserAction → ToggleDeviceCollidersStep (Device1, Disable)</correct-example>
        </example>
      </examples>
    </requirement>
  </requirements>
  <context description="Additional considerations for ToggleDeviceCollidersStep">
    This node is essential for multiple device collider management in virtual lab experiments. It provides the capability to enable/disable colliders on multiple devices simultaneously for device interaction control and safety systems. The distinction between single and multiple device operations is critical for proper usage.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Utility/UtilityNodes.mdc" reason="Utility nodes overview">System utility operations and timing control patterns</reference>
  </references>
</rule>
