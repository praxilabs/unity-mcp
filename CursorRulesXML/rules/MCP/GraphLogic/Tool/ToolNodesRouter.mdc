---
description: Object manipulation, visibility control, and tool-specific interactions. Contains GameObjectSetActiveStep, ToggleColliderStep, and critical sequential collider operation rules.
alwaysApply: false
---

<rule>
  <meta>
    <title>Tool Nodes Router</title>
    <description>Object manipulation, visibility control, and tool-specific interactions. Contains GameObjectSetActiveStep, ToggleColliderStep, and critical sequential collider operation rules.</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
    </applies-to>
  </meta>
  <requirements>
    <non-negotiable priority="critical">
      <description>This is a ROUTING RULE ONLY - it does not provide functional tools or capabilities. This rule only routes you to the appropriate node rules for detailed implementation. For actual node implementation, refer to the specific node rules: GameObjectSetActiveStep.mdc, ToggleColliderStep.mdc, ToolsInputfieldStep.mdc, and ToolsInteractionsMenuStep.mdc.</description>
    </non-negotiable>
    <requirement priority="critical">
      <description>Use GameObjectSetActiveStep for showing/hiding single objects for visibility control. Works on ONE object at a time for object visibility management, tool presentation, and state control.</description>
    </requirement>
    <requirement priority="critical">
      <description>Use ToggleColliderStep for enabling/disabling colliders on a SINGLE object only. Works on ONE object at a time for interaction control, safety systems, and collider management.</description>
    </requirement>
    <requirement priority="high">
      <description>Use ToolsInputfieldStep for handling input field interactions for tools, data entry for tools, parameter input, and tool configuration.</description>
    </requirement>
    <requirement priority="high">
      <description>Use ToolsInteractionsMenuStep for controlling interactions menu for tools, tool menu management, interaction options, and tool selection.</description>
    </requirement>
    <requirement priority="critical">
      <description>CRITICAL: Both GameObjectSetActiveStep and ToggleColliderStep work on ONE single object at a time only. For multiple objects, use multiple nodes sequentially.</description>
    </requirement>
    <requirement priority="critical">
      <description>Distinguish between visibility control and collider management. Use GameObjectSetActiveStep for show/hide operations, ToggleColliderStep for collider enable/disable operations.</description>
    </requirement>
    <requirement priority="high">
      <description>Use GameObjectSetActiveStep instead of FunctionCallStep for visibility operations. GameObjectSetActiveStep is specifically designed for object visibility control and is more appropriate than generic function calls.</description>
    </requirement>
  </requirements>
  <context description="Additional considerations for tool nodes">
    Tool nodes handle object manipulation, visibility control, and tool-specific interactions in virtual lab experiments. These nodes are essential for object state management, interaction control, and tool presentation. The single object limitation is critical for proper operation.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Tool/GameObjectSetActiveStep.mdc" reason="Visibility control">Show/hide GameObjects for visibility control</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Tool/ToggleColliderStep.mdc" reason="Collider management">Enable/disable colliders on single objects</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Tool/ToolsInputfieldStep.mdc" reason="Input field interactions">Handle input field interactions for tools</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/Tool/ToolsInteractionsMenuStep.mdc" reason="Menu control">Control interactions menu for tools</reference>
  </references>
</rule>