---
description: Display stage completion message that doesn't depend on other stages
alwaysApply: false
---

<rule>
  <meta>
    <title>StageEndMessageIndependentStep</title>
    <description>Display stage completion message that doesn't depend on other stages</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
      <action-matcher action="create-xnode-node">Triggered when creating a new StageEndMessageIndependentStep Node using the UnityMCP</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <requirement priority="critical">
      <description>StageEndMessageIndependentStep displays a stage completion message that operates independently of other stages, suitable for standalone achievements. Use for independent stage completion and standalone achievements.</description>
      <examples>
        <example title="Independent Stage Completion">
          <correct-example title="Proper independent stage usage" conditions="Need independent stage completion" expected-result="Independent stage completion message displayed" correctness-criteria="Uses StageEndMessageIndependentStep for independent completion">StageEndMessageIndependentStep (Stage complete) → ShowMessage (Congratulations) → Continue</correct-example>
          <incorrect-example title="Improper independent stage usage" conditions="Need independent stage completion" expected-result="Independent stage completion message displayed" correctness-criteria="Uses StageEndMessageDependentStep for independent completion">StageEndMessageDependentStep (Stage complete) → ShowMessage (Congratulations) (wrong approach)</incorrect-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>StageEndMessageIndependentStep requires Stage Name (name of the completed stage), Message Text (completion message content), Achievement Details (details about what was accomplished), and Next Steps (optional guidance for next actions). Must have stage identification specified, completion message content prepared, achievement details defined, and standalone logic that doesn't depend on other stages.</description>
      <examples>
        <example title="Parameter Requirements">
          <correct-example title="Proper parameter usage" conditions="Using StageEndMessageIndependentStep" expected-result="Independent stage completion message successfully displayed" correctness-criteria="Provides valid stage name and message text">StageEndMessageIndependentStep (Stage Name: "Lab Setup", Message Text: "Stage completed successfully") → Message displayed</correct-example>
          <incorrect-example title="Improper parameter usage" conditions="Using StageEndMessageIndependentStep" expected-result="Independent stage completion message successfully displayed" correctness-criteria="Missing required stage name">StageEndMessageIndependentStep (Message Text: "Stage completed successfully") → No stage name provided</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="critical">
      <description>Use StageEndMessageIndependentStep for independent only. Use for stage completions that don't depend on other stages. Standalone achievements - use for achievements that are self-contained. NOT dependent - use StageEndMessageDependentStep for dependent completions.</description>
      <examples>
        <example title="Independent vs Dependent Completion">
          <correct-example title="Proper independent completion usage" conditions="Need standalone achievement" expected-result="Independent completion message displayed" correctness-criteria="Uses StageEndMessageIndependentStep for independent completion">StageEndMessageIndependentStep (Achievement unlocked) → Independent display</correct-example>
          <incorrect-example title="Improper dependent completion usage" conditions="Need standalone achievement" expected-result="Independent completion message displayed" correctness-criteria="Uses dependent completion for independent achievement">StageEndMessageDependentStep (Achievement unlocked) → Dependent display (wrong approach)</incorrect-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="medium">
      <description>Use stage completion pattern for standalone stage completions, independent achievement pattern for self-contained achievements, and standalone success pattern for task completions and individual accomplishments.</description>
      <examples>
        <example title="Completion Patterns">
          <correct-example title="Proper stage completion pattern" conditions="Need standalone stage completion" expected-result="Stage completion with congratulations" correctness-criteria="Uses stage completion pattern">StageEndMessageIndependentStep (Stage complete) → ShowMessage (Congratulations) → Continue</correct-example>
          <incorrect-example title="Improper dependent completion pattern" conditions="Need standalone stage completion" expected-result="Stage completion with congratulations" correctness-criteria="Uses dependent completion for standalone stage">StageEndMessageDependentStep (Stage complete) → ShowMessage (Congratulations) (wrong approach)</incorrect-example>
        </example>
      </examples>
    </requirement>
  </requirements>
  <context description="Additional considerations for StageEndMessageIndependentStep">
    This node is essential for independent stage completion and standalone achievements in virtual lab experiments. It provides the capability to display a stage completion message that operates independently of other stages, suitable for standalone achievements. The distinction between independent and dependent completion is critical for proper usage.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/UI/UINodes.mdc" reason="UI nodes overview">User interface and messaging patterns</reference>
  </references>
</rule>
