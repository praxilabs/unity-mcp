---
description: Display middle screen message with two action buttons for multiple choice dialogs
alwaysApply: false
---

<rule>
  <meta>
    <title>MiddleMessageTwoActionsStep</title>
    <description>Display middle screen message with two action buttons for multiple choice dialogs</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
      <action-matcher action="create-xnode-node">Triggered when creating a new MiddleMessageTwoActionsStep Node using the UnityMCP</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <requirement priority="critical">
      <description>MiddleMessageTwoActionsStep displays a message in the middle of the screen with two action buttons for multiple choice dialogs and decision points. Use for multiple choice dialogs, decision points, and option selection.</description>
      <examples>
        <example title="Binary Choices">
          <correct-example title="Proper two action usage" conditions="Need binary choice" expected-result="Two action message with two buttons" correctness-criteria="Uses MiddleMessageTwoActionsStep for binary choices">MiddleMessageTwoActionsStep (Choose option A or B) → User selects option → Continue</correct-example>
          <incorrect-example title="Improper two action usage" conditions="Need binary choice" expected-result="Two action message with two buttons" correctness-criteria="Uses MiddleMessageOneActionStep for binary choices">MiddleMessageOneActionStep (Choose option A or B) → User selects option (wrong approach)</incorrect-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>MiddleMessageTwoActionsStep requires Message Text (the content to display), Button One Text (text for the first action button), Button Two Text (text for the second action button), Button Actions (actions to perform for each button), and Close Button (optional close button functionality). Must have decision or choice message text prepared, clear actionable text for both buttons, action logic for each button selection, and choice handling logic.</description>
      <examples>
        <example title="Parameter Requirements">
          <correct-example title="Proper parameter usage" conditions="Using MiddleMessageTwoActionsStep" expected-result="Two action message successfully displayed" correctness-criteria="Provides valid message text and both button texts">MiddleMessageTwoActionsStep (Message Text: "Choose your approach", Button One Text: "Method A", Button Two Text: "Method B") → Message displayed</correct-example>
          <incorrect-example title="Improper parameter usage" conditions="Using MiddleMessageTwoActionsStep" expected-result="Two action message successfully displayed" correctness-criteria="Missing required message text">MiddleMessageTwoActionsStep (Button One Text: "Method A", Button Two Text: "Method B") → No message text provided</correct-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="critical">
      <description>Use MiddleMessageTwoActionsStep for two actions only. Use for binary choices with two options. Displays in center of screen with two prominent buttons. NOT for single action - use MiddleMessageOneActionStep for single confirmations.</description>
      <examples>
        <example title="Two Actions vs Single Action">
          <correct-example title="Proper two action usage" conditions="Need binary choice" expected-result="Two action message displayed" correctness-criteria="Uses MiddleMessageTwoActionsStep for two actions">MiddleMessageTwoActionsStep (Choose option) → Two buttons display</correct-example>
          <incorrect-example title="Improper single action usage" conditions="Need binary choice" expected-result="Two action message displayed" correctness-criteria="Uses single action for binary choice">MiddleMessageOneActionStep (Choose option) → Single button display (wrong approach)</incorrect-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="medium">
      <description>Use decision making pattern for option selection, multi-action message flow for scenario selection, and yes/no decision pattern for binary confirmations and choices.</description>
      <examples>
        <example title="Decision Patterns">
          <correct-example title="Proper decision making pattern" conditions="Need option selection" expected-result="Decision with user selection" correctness-criteria="Uses decision making pattern">MiddleMessageTwoActionsStep (Choose option) → UserSelectsOption → HandleSelection → Continue</correct-example>
          <incorrect-example title="Improper single action pattern" conditions="Need option selection" expected-result="Decision with user selection" correctness-criteria="Uses single action for decision making">MiddleMessageOneActionStep (Choose option) → UserSelectsOption (wrong approach)</incorrect-example>
        </example>
      </examples>
    </requirement>
  </requirements>
  <context description="Additional considerations for MiddleMessageTwoActionsStep">
    This node is essential for binary choices and decision points in virtual lab experiments. It provides the capability to display a message in the middle of the screen with two action buttons for multiple choice dialogs and decision points. The distinction between two actions and single action is critical for proper usage.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/UI/UINodes.mdc" reason="UI nodes overview">User interface and messaging patterns</reference>
  </references>
</rule>
