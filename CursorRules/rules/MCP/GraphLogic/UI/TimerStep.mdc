---
alwaysApply: false
description: Display countdown timer with UI controls for experiment timing and procedure pacing
---

# TimerStep Node

## 📋 Overview
Displays a countdown timer with UI controls for experiment timing, procedure pacing, and user-controlled countdowns.

## 🔧 Node Details

**Node Type**: TimerStep
**Purpose**: Display countdown timer with UI controls
**Usage**: Experiment timing, procedure pacing, user-controlled countdowns

## 📋 Basic Prerequisites

1. **Timer Duration**: Set appropriate duration in seconds
2. **Timer Controls**: Configure available controls (start, pause, reset)
3. **User Interface**: Timer UI must be accessible to users
4. **Timer Logic**: System to handle timer start/stop/reset functionality

## 📝 Parameters

- **Duration**: Timer duration in seconds
- **Timer Type**: Countdown or count-up timer
- **Controls**: Available timer controls (start, pause, reset)
- **Auto Start**: Whether to start automatically

## 🚨 Critical TimerStep Rules
- **User Controlled**: Creates a panel with timer for user to control freely
- **Time-Sensitive**: Use for experiments that require pacing and timing
- **NOT DelayStep**: Use DelayStep for fixed delays, TimerStep for user-controlled timing

## 🏗️ Common Patterns

### User Controlled Timer
```
AnyNode → TimerStep(Time) → AnyNode   // Creates a Panel with a timer for the User to control freely
```

### Timer with Action Pattern
```
TimerStep (Duration) → UserAction → SideMessageStep (Time complete) → Continue
```

### Experiment Timing
```
StartExperiment → TimerStep (30 minutes) → MonitorProgress → Continue
```

### Procedure Pacing
```
TimerStep (5 minutes) → UserCompletesTask → CheckCompletion → Continue
```

## ⚠️ Common Mistakes

1. **Wrong timing**: Set appropriate durations for TimerStep
2. **Missing user guidance**: Provide clear instructions for timer usage
3. **Inadequate timer controls**: Ensure timer has necessary controls
4. **Wrong node choice**: Use DelayStep for fixed delays, not TimerStep

## 🎯 Best Practices

1. **Use for time-sensitive experiments** that require pacing
2. **Set appropriate durations** for different experiment phases
3. **Provide clear timer instructions** to users
4. **Test timer controls** thoroughly
5. **Ensure timer visibility** and accessibility
6. **Handle timer completion** appropriately