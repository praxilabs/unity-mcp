---
description: Event-driven interactions and reactive programming. Contains event caller nodes and event-based step patterns for reactive experiment flows.
alwaysApply: false
---

<rule>
  <meta>
    <title>NewEvents Nodes</title>
    <description>Event-driven interactions and reactive programming. Contains event caller nodes and event-based step patterns for reactive experiment flows.</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
    </applies-to>
  </meta>
  <requirements>
    <non-negotiable priority="critical">
      <description>This is a ROUTING RULE ONLY - it does not provide functional tools or capabilities. This rule only routes you to the appropriate node rules for detailed implementation. For actual node implementation, refer to the specific node rules: EventCallerStep.mdc.</description>
    </non-negotiable>
    <requirement priority="critical">
      <description>NewEvents nodes handle event-driven interactions and reactive programming in virtual lab experiments for cross-graph signaling and reactive behaviors. All events must be registered in the Event Registry, use exact event names to avoid typos, and implement reactive programming for event-driven behaviors and cross-graph communication.</description>
    </requirement>
    <requirement priority="critical">
      <description>Use EventCallerStep for event-driven interactions and reactive programming, cross-graph signaling and communication, triggering registered events during experiment flow, and reactive behaviors based on experiment state.</description>
    </requirement>
    <requirement priority="high">
      <description>Event registration and naming are critical for NewEvents functionality. Event names must be exact and registered in the Event Registry. Use descriptive event names that clearly indicate the purpose and trigger condition of the event.</description>
    </requirement>
    <requirement priority="high">
      <description>Use NewEvents for reactive programming patterns where experiment flow responds to events rather than following linear execution. Common patterns include conditional event triggers, chained events, and cross-graph communication.</description>
    </requirement>
    <requirement priority="medium">
      <description>Use descriptive event names and meaningful payload parameters in NewEvents to make the logic clear and maintainable. Event names should clearly indicate the trigger condition and payload should contain relevant data for event handlers.</description>
    </requirement>
    <non-negotiable priority="critical">
      <description>NEVER use EventCallerStep for direct method execution or non-event operations. NEVER use unregistered event names or event names with typos. NEVER use NewEvents for linear execution patterns. Always ensure events are properly registered and use exact event names.</description>
    </non-negotiable>
  </requirements>
  <context description="Additional considerations for NewEvents nodes">
    NewEvents nodes are essential for event-driven interactions and reactive programming in virtual lab experiments. Always ensure proper event registration, use exact event names, and implement appropriate event listeners. Use for cross-graph signaling and reactive behaviors rather than linear execution patterns.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
    <reference as="context" href=".cursor/rules/MCP/GraphLogic/NewEvents/EventCallerStep.mdc" reason="Event-driven trigger">EventCallerStep implementation patterns</reference>
  </references>
</rule>