---
alwaysApply: false
description: Global method execution without targeting a specific scene object
---

# FunctionCallGlobalStep Node

## üìã Overview
Executes global/static methods or methods on singletons/services for system-wide functions without targeting specific scene objects.

## üîß Node Details

**Node Type**: FunctionCallGlobalStep
**Menu Path**: "Function Call/Function Call Global"
**Inherits**: FunctionCallBase

## üìã Basic Prerequisites

1. **Global Method**: Static method or singleton service method
2. **Method Visibility**: Method must be public to be accessible
3. **Type Registration**: Type must be accessible for reflection

## üìù Parameters

- **selectedComponent**: Type that contains the static/global method
- **selectedFunction**: Method name
- **parameterValues**: Array of SerializableParameter values

## üèóÔ∏è Common Patterns

### Toggle Global UI
```
FunctionCallGlobalStep (ToggleFirstPersonUI) ‚Üí FunctionCallGlobalStep (ToggleBirdEyeUI) ‚Üí Continue
```

### Mark Scenario Completed
```
FunctionCallGlobalStep (MarkScenarioAsCompleted) ‚Üí DelayStep ‚Üí ShowCompletionMessage
```

## üö® Critical FunctionCallGlobalStep Rules
- **Global Methods Only**: Use for static/global methods, not scene object methods
- **No Scene Context**: Methods don't target specific scene objects
- **System-Wide Effects**: Methods affect the entire system

## ‚ö†Ô∏è Common Mistakes

1. **Expecting scene object context**: Use non-instance/static targets only
2. **Wrong assembly/type name**: Verify global target type names
3. **Using for scene object methods**: Use FunctionCallStep for scene object methods
4. **Using for coroutines**: Use FunctionCallCoroutineGlobalStep for global coroutines

## üéØ Best Practices

1. **Keep global methods side-effect aware** to avoid unintended consequences
2. **Prefer pure/controlled global changes** for predictable behavior
3. **Use for system-wide functions** that don't target specific objects
4. **Verify method is static** or accessible via singleton
5. **Check parameter signatures** before execution

