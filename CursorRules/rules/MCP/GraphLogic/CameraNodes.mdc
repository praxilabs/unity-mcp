---
description: Camera positioning, focus control, and view management. Contains FocusOnToolStep, ReturnCameraStep, and camera sequence patterns for guided attention.
alwaysApply: false
---
# Camera Nodes

## 📋 Overview
Camera nodes control camera positioning and focus in virtual lab experiments. These nodes are essential for guided attention, view management, and providing detailed views of objects.

## 🔧 Available Nodes

### FocusOnToolStep
**Purpose**: Focus camera on specific objects
**Usage**: Guided attention, close-up views
**Best Practices**:
- Use for highlighting important objects
- Connect to immediate response actions

### ReturnCameraStep
**Purpose**: Return camera to default position
**Usage**: Reset view, overview mode
**Best Practices**:
- Use after detailed views
- Return to overview for context
- Connect to continuation actions

## 🏗️ Common Patterns

### Object Examination Pattern
```
FocusOnToolStep (Object) → ShowMessage (Object details) → ReturnCameraStep → Continue
```

### Guided Attention Pattern
```
ShowMessage (Look at this) → FocusOnToolStep (Target object) → DelayStep → ReturnCameraStep
```

### Multiple Object Focus
```
FocusOnToolStep (Object A) → ShowMessage (Details A) → FocusOnToolStep (Object B) → ShowMessage (Details B) → ReturnCameraStep
```

### Interactive Focus Pattern
```
ClickStep (Object) → FocusOnToolStep (Object) → ShowMessage (Detailed info) → ReturnCameraStep
```

### Camera Sequence Pattern
```
FocusOnToolStep (Setup area) → ShowMessage (Setup instructions) → FocusOnToolStep (Tool) → ShowMessage (Tool usage) → ReturnCameraStep
```

### Bench Position Camera Pattern
```
ClickStep (Bench Position) → FunctionCallStep (SetMainBenchCamera) → ToggleColliderStep (Enable) → Continue

context: Focus camera on specific bench position when user clicks on it
```

### Bird's Eye View Pattern
```
FunctionCallStep (GoToBirdEye) → DelayStep → FunctionCallStep (ToggleBirdEyeUI) → Continue

context: Switch to overhead view for better spatial understanding
```


## 🔍 Debugging Tips

1. **Test camera movements** one step at a time
2. **Verify camera targets** exist in scene
3. **Check camera states** before and after movements
4. **Use DelayStep** to slow down camera movements for debugging
5. **Monitor camera transitions** with console logs
6. **Test camera sequences** end-to-end
7. **Validate camera positioning** and focus
8. **Check camera dependencies** and prerequisites