---
description: Unity MCP tools reference and capabilities guide
alwaysApply: false
---

<rule>
  <meta>
    <title>Unity MCP Tools Reference</title>
    <description>Essential Unity MCP tool usage patterns and requirements</description>
    <created-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</created-at>
    <last-updated-at utc-timestamp="1744240920">January 8, 2025, 12:00 PM UTC</last-updated-at>
    <applies-to>
      <file-matcher glob="">All files that this rule can attach to</file-matcher>
      <action-matcher action="create-scriptableobject">Triggered when creating a new XNode Graph Node using the UnityMCP</action-matcher>
    </applies-to>
  </meta>
  <requirements>
    <non-negotiable priority="critical">
      <description>Before creating any node with mcp_unityMCP_create_xnode_node, follow the node-creation-protocol section. Description metadata must use the description-template format, and tooltip must explain node functionality. Description MUST be formatted in markdown for Unity Editor readability.</description>
      <examples>
        <example title="Node Creation Protocol">
          <correct-example title="Complete node creation workflow" conditions="Creating a node in graph" expected-result="Properly configured node with metadata" correctness-criteria="Follows complete workflow including rule fetch and proper formatting">Follow node-creation-protocol steps and use description-template format for metadata</correct-example>
          <incorrect-example title="Incomplete node creation" conditions="Creating a node in graph" expected-result="Properly configured node with metadata" incorrectness-criteria="Missing required metadata or skipping rule file fetch">Skipping fetch_rules() and using generic components without proper template formatting</incorrect-example>
        </example>
      </examples>
    </non-negotiable>
    <requirement priority="critical">
      <description>Always connect nodes using connection-standards section rules: proper port connections, exact auto-generated node names, and naming conventions.</description>
      <examples>
        <example title="Connection Standards">
          <correct-example title="Proper connection pattern" conditions="Connecting nodes" expected-result="Valid port connection" correctness-criteria="Uses proper port types and exact names">NodeA_12345(output) → NodeB_67890(input)</correct-example>
          <incorrect-example title="Invalid connection pattern" conditions="Connecting nodes" expected-result="Valid port connection" incorrectness-criteria="Uses wrong port types or custom names">NodeA(input) ← NodeB(output)</incorrect-example>
        </example>
      </examples>
    </requirement>
    <requirement priority="high">
      <description>Follow validation-dependencies section for all graph operations and validation requirements.</description>
    </requirement>
    <requirement priority="medium">
      <description>Use MCP tools based on their specific functionality as defined in tool-functionality section. Tool names indicate their specific functionality.</description>
      <examples>
        <example title="Tool Selection">
          <correct-example title="Correct tool usage" conditions="Creating experiment assets" expected-result="Proper tool selection for task" correctness-criteria="Uses appropriate tool based on functionality">ExperimentData creation → mcp_unityMCP_create_scriptable_object (name indicates ScriptableObject creation)</correct-example>
          <incorrect-example title="Incorrect tool usage" conditions="Creating experiment assets" expected-result="Proper tool selection for task" incorrectness-criteria="Uses wrong tool for operation">ExperimentData creation → mcp_unityMCP_manage_gameobject (name indicates GameObject management)</incorrect-example>
        </example>
      </examples>
    </requirement>
  </requirements>
  <tool-functionality>
    <tool name="mcp_unityMCP_create_scriptable_object" purpose="ScriptableObject creation" targets="ExperimentData, ExperimentItemsRegistry, StepsGraph"/>
    <tool name="mcp_unityMCP_manage_gameobject" purpose="GameObject operations" features="component_properties"/>
    <tool name="mcp_unityMCP_read_console" purpose="Unity console messages" types="error, warning, log, all"/>
    <tool name="mcp_unityMCP_manage_editor" purpose="Editor state control" actions="play, pause, get_state, set_active_tool"/>
    <tool name="mcp_unityMCP_execute_menu_item" purpose="Unity menu execution" parameter="menu_path"/>
  </tool-functionality>
  <node-creation-protocol>
    <step number="1" action="fetch_rules" target="MCP/GraphLogic/Category/NodeType path"/>
    <step number="2" action="replace_placeholders" target="[VariableName] with actual object names"/>
    <step number="3" action="format_description" format="markdown" structure="bulleted list"/>
    <step number="4" action="set_tooltip" purpose="explain node functionality"/>
    <fallback condition="no step-list" value="None"/>
  </node-creation-protocol>
  <connection-standards>
    <rule type="port-direction">output ports connect to input ports</rule>
    <rule type="naming">Use exact auto-generated node names (NodeType_InstanceID format)</rule>
    <rule type="readability">May create shortened names but never change node type identifier</rule>
    <pattern correct="NodeA_12345(output) → NodeB_67890(input)"/>
    <pattern incorrect="NodeA(input) ← NodeB(output)"/>
  </connection-standards>
  <description-template>
    <format>markdown</format>
    <structure>
      <intro>This Node is responsible for {node functionality description}.</intro>
      <section title="Node Setup Instructions">
        <list type="bulleted">
          <item>• {Step 1 from setup-instructions step-list}</item>
          <item>• {Step 2 from setup-instructions step-list}</item>
          <item>• {Step 3 from setup-instructions step-list}</item>
        </list>
      </section>
    </structure>
    <tooltip>Brief explanation of what the node does</tooltip>
  </description-template>
  <validation-dependencies>
    <rule name="Graph Validation Rules" file="graph-validation-rules.mdc" scope="all graph operations"/>
  </validation-dependencies>
  <context description="Additional Unity MCP tool capabilities">
    Always use tools according to their specific capabilities and parameter requirements as defined in tool-functionality section.
  </context>
  <references>
    <reference as="dependency" href=".cursor/rules/rules.mdc" reason="Follows standard rule format">Base rule format definition</reference>
  </references>
</rule>